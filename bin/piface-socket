#!/usr/bin/env python

import socket
import sys
import os

import json

debug = os.getenv('DEBUG', False)
if debug:
    print 'Starting web server for debug'
    from piface_web import pifacecad
    cad = pifacecad.PiFaceCAD()

server_address = './uds_socket'

# Make sure the socket does not already exist
try:
    os.unlink(server_address)
except OSError:
    if os.path.exists(server_address):
        raise

# Create a UDS socket
sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)

# Bind the socket to the port
print >>sys.stderr, 'starting up on %s' % server_address
sock.bind(server_address)

# Listen for incoming connections
sock.listen(1)

# while True:
# Wait for a connection
print >>sys.stderr, 'waiting for a connection'
connection, client_address = sock.accept()

def handle_button_event(num):
    data = {'type': 'button', 'id': num, 'value': 1}
    connection.sendall(json.dumps(data))

listener = pifacecad.SwitchEventListener(chip=cad)
listener.register(0, pifacecad.IODIR_RISING_EDGE, handle_button_event)
listener.activate()

try:
    print >>sys.stderr, 'connection from', client_address

    # Receive the data in small chunks and retransmit it
    while True:
        data = connection.recv(16)
        # print >>sys.stderr, 'received "%s"' % data
        # if data:
        #     print 'got data'
        #     # print >>sys.stderr, 'sending data back to the client'
        #     # connection.sendall(data)
        # else:
        #     print >>sys.stderr, 'no more data from', client_address
        #     # break
finally:
    # Clean up the connection
    connection.close()